(function () {
    $(function () {
        var _$doctorsTable = $('#DoctorsTable');
        var _doctorsService = abp.services.app.doctors;
        var _entityTypeFullName = 'ATI.Pharmacy.Doctor';

        //var $selectedDate = {
        //    startDate: null,
        //    endDate: null,
        //};

        //$('.date-picker').on('apply.daterangepicker', function (ev, picker) {
        //    $(this).val(picker.startDate.format('MM/DD/YYYY'));
        //});

        //$('.startDate')
        //    .daterangepicker()
        //    .on('apply.daterangepicker', (ev, picker) => {
        //        $selectedDate.startDate = picker.startDate;
        //        getDoctors();
        //    })
        //    .on('cancel.daterangepicker', function (ev, picker) {
        //        $(this).val('');
        //        $selectedDate.startDate = null;
        //        getDoctors();
        //    });

        //$('.endDate')
        //    .daterangepicker()
        //    .on('apply.daterangepicker', (ev, picker) => {
        //        $selectedDate.endDate = picker.startDate;
        //        getDoctors();
        //    })
        //    .on('cancel.daterangepicker', function (ev, picker) {
        //        $(this).val('');
        //        $selectedDate.endDate = null;
        //        getDoctors();
        //    });

        var _permissions = {
            create: abp.auth.hasPermission('Pages.Doctors.Create'),
            edit: abp.auth.hasPermission('Pages.Doctors.Edit'),
            delete: abp.auth.hasPermission('Pages.Doctors.Delete'),
            viewFacilityInGrid: abp.auth.hasPermission('Pages.Doctors.Grid.View.Facility'),
        };

        var _createOrEditModal = new app.ModalManager({
            viewUrl: abp.appPath + 'Pharmacy/Doctors/CreateOrEditModal',
            scriptUrl: abp.appPath + 'view-resources/Areas/Pharmacy/Views/Doctors/_CreateOrEditModal.js',
            modalClass: 'CreateOrEditDoctorModal',
            modalSize: 'modal-fullscreen'
        });

        var _viewDoctorModal = new app.ModalManager({
            viewUrl: abp.appPath + 'Pharmacy/Doctors/ViewdoctorModal',
            modalClass: 'ViewDoctorModal',
        });

        var _entityTypeHistoryModal = app.modals.EntityTypeHistoryModal.create();
        function entityHistoryIsEnabled() {
            return (
                abp.auth.hasPermission('Pages.Administration.AuditLogs') &&
                abp.custom.EntityHistory &&
                abp.custom.EntityHistory.IsEnabled &&
                _.filter(abp.custom.EntityHistory.EnabledEntities, (entityType) => entityType === _entityTypeFullName)
                    .length === 1
            );
        }

        var getDateFilter = function (element) {
            if ($selectedDate.startDate == null) {
                return null;
            }
            return $selectedDate.startDate.format('YYYY-MM-DDT00:00:00Z');
        };

        var getMaxDateFilter = function (element) {
            if ($selectedDate.endDate == null) {
                return null;
            }
            return $selectedDate.endDate.format('YYYY-MM-DDT23:59:59Z');
        };

        var _excelColumnSelectionModal = new app.ModalManager({
            viewUrl: abp.appPath + 'Pharmacy/Doctors/ExcelColumnSelectionModal',
            scriptUrl: abp.appPath + 'view-resources/Areas/Pharmacy/Views/Doctors/_ExcelColumnSelectionModal.js',
            modalClass: 'DoctorExcelColumnSelectionModal',
        });

        var columnsDefs = [
            {
                className: 'control responsive',
                orderable: false,
                render: function () {
                    return '';
                },
                targets: 0,
            },
            {
                targets: 1,
                data: 'doctor.firstName',
                name: 'User.name',
                className: 'dt-left'
            },
            {
                targets: 2,
                data: 'doctor.lastName',
                name: 'User.surName',
                className: 'dt-left'
            },
            {
                targets: 3,
                data: 'doctor.licenseNumber',
                name: 'licenseNumber',
                className: 'dt-left'
            },

            {
                targets: 4,
                data: 'doctor.phoneNumber',
                name: 'User.phoneNumber',
                className: 'dt-left',
                render: function (data, type, row) {
                    // Format phone number (e.g., (123) 456-7890)
                    return formatPhoneNumber(data);
                }
            }
        ];

        if (_permissions.viewFacilityInGrid) {
            columnsDefs.push({
                orderable: false,
                targets: 5,
                data: 'facility',
                name: 'facility',
                className: 'dt-left'
            })
        }

        columnsDefs.push(
            {
                data: null,
                orderable: false,
                defaultContent: '',
                visible: function () {
                    return _permissions.edit;
                },
                render: function (data) {
                    // Using the action function to create a button
                    return "<button class='btn btn-primary edit-doctor' data-id='" + data.doctor.id + "'><i class='fa fa-edit'></i></button>";
                },
                targets: _permissions.viewFacilityInGrid ? 6 : 5
            })

        var dataTable = _$doctorsTable.DataTable({
            paging: true,
            serverSide: true,
            processing: true,
            listAction: {
                ajaxFunction: _doctorsService.getAll,
                inputFilter: function () {
                    return {
                        filter: $('#DoctorsTableFilter').val() || '',
                        defaultFacilityId: 0,
                        companyId: $("#CompanyList").val()
                    };
                },
            },
            columnDefs: columnsDefs
        });
        function formatPhoneNumber(phoneNumber) {
            // Remove non-numeric characters
            const cleaned = ('' + phoneNumber).replace(/\D/g, '');
            const match = cleaned.match(/^(\d{3})(\d{3})(\d{4})$/);
            if (match) {
                return '(' + match[1] + ') ' + match[2] + '-' + match[3];
            }
            return phoneNumber; // Return as is if not valid
        }
        function getDoctors() {
            dataTable.ajax.reload();
        }

        // Initialize click event listeners for action buttons
        $("#CompanyList").on("change", function () { dataTable.ajax.reload(); });
        _$doctorsTable.on('draw.dt', function () {
            // Re-initialize button click actions after data has been loaded/redrawn            
            $('.edit-doctor').on('click', function () {
                var id = $(this).attr("data-id");
                _createOrEditModal.open({ id: id });

            });

            $('.view-doctor').on('click', function () {
                var id = $(this).attr("data-id");
                _viewDoctorModal.open({ id: id });
            });

           
        });



        function deleteDoctor(doctor) {
            abp.message.confirm('', app.localize('AreYouSure'), function (isConfirmed) {
                if (isConfirmed) {
                    _doctorsService
                        .delete({
                            id: doctor.id,
                        })
                        .done(function () {
                            getDoctors(true);
                            abp.notify.success(app.localize('SuccessfullyDeleted'));
                        });
                }
            });
        }

        $('#ShowAdvancedFiltersSpan').click(function () {
            $('#ShowAdvancedFiltersSpan').hide();
            $('#HideAdvancedFiltersSpan').show();
            $('#AdvacedAuditFiltersArea').slideDown();
        });

        $('#HideAdvancedFiltersSpan').click(function () {
            $('#HideAdvancedFiltersSpan').hide();
            $('#ShowAdvancedFiltersSpan').show();
            $('#AdvacedAuditFiltersArea').slideUp();
        });

        $('#CreateNewDoctorButton').click(function () {
            _createOrEditModal.open();
        });

        abp.event.on('app.createOrEditDoctorModalSaved', function () {

            getDoctors();
        });
        abp.event.on('app.doctorDataDeleted', function () {
            getDoctors();
        });

        $('#GetDoctorsButton').click(function (e) {
            e.preventDefault();
            getDoctors();
        });

        $(document).keypress(function (e) {
            if (e.which === 13) {
                getDoctors();
            }
        });

        $('.reload-on-change').change(function (e) {
            getDoctors();
        });
        //$('#FacilityList').change(function (e) {
        //    getDoctors();
        //});

        $('.reload-on-keyup').keyup(function (e) {
            getDoctors();
        });

        $('#btn-reset-filters').click(function (e) {
            $('.reload-on-change,.reload-on-keyup,#MyEntsTableFilter').val('');
            getDoctors();
        });
    });
})();
